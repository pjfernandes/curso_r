df<-read.csv("samples.csv", h=T)
head(df)
df<-read.csv("samples.csv", h=T, sep=";")
head(df)
idade<-16
if (idade >= 16) {
print("Pode votar")
} else {
print("Não pode votar")
}
pizza <- c("portuguesa", "quatro queijos", "marguerita")
for (i in 1:length(pizza)) {
print(pizza[i])
}
for (fatia in pizza) {
print(fatia)
}
runif(1)
runif(2)
sample(1,6)
runif()
runif(1)
sample(1,1:6)
sample(1,size=1:6)
sample(1,c(1,2,3,4,5,6))
sample(1,6)
sample(1,10)
sample(x=1,10)
sample(x=1,size10)
sample(x=1,size=10)
sample(x)
sample(dado)
#######
dado<-1:6
sample(dado)
sample(1,dado)
sample(dado, 1)
dado<-1:6
jogada<-sample(1, dado)
while(jogada != 5) {
print(jogada)
jogada<-sample(1, dado)
}
dado<-1:6
jogada<-sample(dado, 1)
while(jogada != 5) {
print(jogada)
jogada<-sample(1, dado)
}
sample(dado, 1)
sample(dado, 1)
sample(dado, 1)
dado<-1:6
jogada<-sample(dado, 1)
while(jogada != 5) {
print(jogada)
jogada<-sample(1, dado)
}
paste(jogada)
dado<-1:6
jogada<-sample(dado, 1)
while(jogada != 5) {
paste(jogada)
jogada<-sample(1, dado)
}
dado<-1:6
jogada<-sample(dado, 1)
while(jogada != 5) {
paste(jogada)
jogada<-sample(dado, 1)
}
dado<-1:6
jogada<-sample(dado, 1)
while(jogada != 5) {
print(jogada)
jogada<-sample(dado, 1)
}
x<-1
fatorial<-1
while(x <= 5) {
fatorial <- fatorial * x
x <- x + 1
}
print(fatorial)
factorial(5)
#######Funções
##soma
soma <- function(x, y) {
return(x+y)
}
soma(2,4)
#######Funções
##soma
soma <- function(x, y) {
return x+y
}
#######Funções
##soma
soma <- function(x, y) {
return(x+y)
}
resultado <- soma(2, 3)
megasena <- function() {
sequencia <- 1:60
sorteio <- sample(6, sequencia)
return(sorteio)
}
megasena()
sorteio <- sample(sequencia, 6)
megasena <- function() {
sequencia <- 1:60
sorteio <- sample(sequencia, 6)
return(sorteio)
}
megasena()
megasena()
megasena()
megasena()
megasena()
megasena()
max<-numeric()
class(max)
is.nan(max)
is.na(max)
length(max)
maximo<-function(vetor) {
max <- numeric()
for (item in 1:length(vetor)) {
if (length(max) == 0 || max < vetor[item] {
max <- vetor[item]
}
}
return(max)
}
x<-c(59, 34, 2, 10, 25, 200, 123, 44)
maximo(x)
maximo<-function(vetor) {
max <- numeric()
for (item in 1:length(vetor)) {
if (length(max) == 0 || max < vetor[item] {
max <- vetor[item]
}
}
return(max)
}
x<-c(59, 34, 2, 10, 25, 200, 123, 44)
maximo(x)
maximo<-function(vetor) {
max <- numeric()
for (item in 1:length(vetor)) {
if (length(max) == 0 || max < vetor[item]) {
max <- vetor[item]
}
}
return(max)
}
x<-c(59, 34, 2, 10, 25, 200, 123, 44)
maximo(x)
somatorio<-function(vetor) {
soma<-0
for(item in 1:length(vetor)) {
soma<-soma + vetor[item]
}
return(soma)
}
x<-c(59, 34, 2, 10, 25, 200, 123, 44)
somatorio(x)
search()
encontrar_valor <- function(numero, vetor) {
resultado <- FALSE
for (i in 1:length(vetor)) {
if (numero == vetor[i]) {
resultado <- TRUE
break
} else {
resultado <- FALSE
}
}
return(resultado)
}
x<-c(59, 34, 2, 10, 25, 200, 123, 44)
encontrar_valor(2, x)
encontrar_valor(200, x)
encontrar_valor(57, x)
system.time(encontrar_valor(200, x))
sample(600)
numeros<-sample(10000)
numeros
system.time(encontrar_valor(4556))
system.time(encontrar_valor(4556, x))
###################
set.seed(42)
numeros<-sample(100000)
system.time(encontrar_valor(4556, x))
###################
set.seed(42)
numeros<-sample(500000)
system.time(encontrar_valor(4556, x))
system.time(encontrar_valor(499999, x))
encontrar_valor[499999]
numeros[499999]
system.time(encontrar_valor(237489, x))
###################
set.seed(42)
numeros<-sample(5000000)
system.time(encontrar_valor(237489, x))
###################
set.seed(42)
numeros<-sample(15000000)
numeros[15000000-1]
numeros[1]
system.time(encontrar_valor(3207141, x))
###################
set.seed(42)
numeros<-sample(15000000)
system.time(encontrar_valor(3207141, x))
system.time(encontrar_valor(3207141, x), gcFirst = FALSE)
system.time(encontrar_valor(3207141, x), gcFirst = FALSE)
fatorial
fatorial<-function(numero) {
resultado<-1
sequencia<-numero:1
for(i in sequencia) {
resultado <- resultado * i
}
return(resultado)
}
fatorial(5)
fatorial<-function(numero) {
if (numero == 0 || numero==1) {
return(1)
} else {
return(numero*fatorial(numero-1))
}
}
fatorial(5)
